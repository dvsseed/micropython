// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR_a, (const byte*)"\xc4\xb5\x01" "a")
QDEF(MP_QSTR_a_hash_, (const byte*)"\x67\x6e\x02" "a#")
QDEF(MP_QSTR_a_hash__colon_1, (const byte*)"\x2c\xab\x04" "a#:1")
QDEF(MP_QSTR_a_hash__colon_3, (const byte*)"\x2e\xab\x04" "a#:3")
QDEF(MP_QSTR_a2, (const byte*)"\x76\x6e\x02" "a2")
QDEF(MP_QSTR_a4, (const byte*)"\x70\x6e\x02" "a4")
QDEF(MP_QSTR_a4_colon_1, (const byte*)"\xbb\xc5\x04" "a4:1")
QDEF(MP_QSTR_a4_colon_3, (const byte*)"\xb9\xc5\x04" "a4:3")
QDEF(MP_QSTR_a_colon_1, (const byte*)"\x0f\x3e\x03" "a:1")
QDEF(MP_QSTR_a_colon_2, (const byte*)"\x0c\x3e\x03" "a:2")
QDEF(MP_QSTR_a_colon_4, (const byte*)"\x0a\x3e\x03" "a:4")
QDEF(MP_QSTR_a_colon_5, (const byte*)"\x0b\x3e\x03" "a:5")
QDEF(MP_QSTR_b, (const byte*)"\xc7\xb5\x01" "b")
QDEF(MP_QSTR_b2_colon_1, (const byte*)"\xde\x62\x04" "b2:1")
QDEF(MP_QSTR_b3, (const byte*)"\x94\x6e\x02" "b3")
QDEF(MP_QSTR_b4, (const byte*)"\x93\x6e\x02" "b4")
QDEF(MP_QSTR_b4_colon_1, (const byte*)"\xd8\x59\x04" "b4:1")
QDEF(MP_QSTR_b4_colon_2, (const byte*)"\xdb\x59\x04" "b4:2")
QDEF(MP_QSTR_b5, (const byte*)"\x92\x6e\x02" "b5")
QDEF(MP_QSTR_b5_colon_1, (const byte*)"\xd9\x5d\x04" "b5:1")
QDEF(MP_QSTR_b_colon_1, (const byte*)"\x0c\x42\x03" "b:1")
QDEF(MP_QSTR_b_colon_2, (const byte*)"\x0f\x42\x03" "b:2")
QDEF(MP_QSTR_c, (const byte*)"\xc6\xb5\x01" "c")
QDEF(MP_QSTR_c_hash_, (const byte*)"\xa5\x6e\x02" "c#")
QDEF(MP_QSTR_c_hash_5, (const byte*)"\x70\x43\x03" "c#5")
QDEF(MP_QSTR_c_hash_5_colon_1, (const byte*)"\xbb\xda\x05" "c#5:1")
QDEF(MP_QSTR_c_hash_5_colon_2, (const byte*)"\xb8\xda\x05" "c#5:2")
QDEF(MP_QSTR_c_hash__colon_1, (const byte*)"\x6e\xb3\x04" "c#:1")
QDEF(MP_QSTR_c_hash__colon_8, (const byte*)"\x67\xb3\x04" "c#:8")
QDEF(MP_QSTR_c2_colon_2, (const byte*)"\xfc\xe6\x04" "c2:2")
QDEF(MP_QSTR_c3, (const byte*)"\xb5\x6e\x02" "c3")
QDEF(MP_QSTR_c3_colon_3, (const byte*)"\x7c\xf3\x04" "c3:3")
QDEF(MP_QSTR_c3_colon_4, (const byte*)"\x7b\xf3\x04" "c3:4")
QDEF(MP_QSTR_c4, (const byte*)"\xb2\x6e\x02" "c4")
QDEF(MP_QSTR_c4_colon_1, (const byte*)"\xf9\xdd\x04" "c4:1")
QDEF(MP_QSTR_c4_colon_3, (const byte*)"\xfb\xdd\x04" "c4:3")
QDEF(MP_QSTR_c4_colon_4, (const byte*)"\xfc\xdd\x04" "c4:4")
QDEF(MP_QSTR_c5, (const byte*)"\xb3\x6e\x02" "c5")
QDEF(MP_QSTR_c5_colon_1, (const byte*)"\x78\xea\x04" "c5:1")
QDEF(MP_QSTR_c5_colon_2, (const byte*)"\x7b\xea\x04" "c5:2")
QDEF(MP_QSTR_c5_colon_3, (const byte*)"\x7a\xea\x04" "c5:3")
QDEF(MP_QSTR_c5_colon_4, (const byte*)"\x7d\xea\x04" "c5:4")
QDEF(MP_QSTR_c_colon_1, (const byte*)"\x0d\x46\x03" "c:1")
QDEF(MP_QSTR_c_colon_2, (const byte*)"\x0e\x46\x03" "c:2")
QDEF(MP_QSTR_c_colon_3, (const byte*)"\x0f\x46\x03" "c:3")
QDEF(MP_QSTR_c_colon_4, (const byte*)"\x08\x46\x03" "c:4")
QDEF(MP_QSTR_c_colon_8, (const byte*)"\x04\x46\x03" "c:8")
QDEF(MP_QSTR_d, (const byte*)"\xc1\xb5\x01" "d")
QDEF(MP_QSTR_d_hash_, (const byte*)"\xc2\x6d\x02" "d#")
QDEF(MP_QSTR_d_hash_5_colon_2, (const byte*)"\xff\x92\x05" "d#5:2")
QDEF(MP_QSTR_d_hash__colon_2, (const byte*)"\x0a\xed\x04" "d#:2")
QDEF(MP_QSTR_d_hash__colon_3, (const byte*)"\x0b\xed\x04" "d#:3")
QDEF(MP_QSTR_d3, (const byte*)"\xd2\x6d\x02" "d3")
QDEF(MP_QSTR_d4, (const byte*)"\xd5\x6d\x02" "d4")
QDEF(MP_QSTR_d4_colon_1, (const byte*)"\x1e\x32\x04" "d4:1")
QDEF(MP_QSTR_d5, (const byte*)"\xd4\x6d\x02" "d5")
QDEF(MP_QSTR_d5_colon_1, (const byte*)"\x1f\x36\x04" "d5:1")
QDEF(MP_QSTR_d5_colon_2, (const byte*)"\x1c\x36\x04" "d5:2")
QDEF(MP_QSTR_d_colon_1, (const byte*)"\x0a\x29\x03" "d:1")
QDEF(MP_QSTR_d_colon_2, (const byte*)"\x09\x29\x03" "d:2")
QDEF(MP_QSTR_d_colon_3, (const byte*)"\x08\x29\x03" "d:3")
QDEF(MP_QSTR_d_colon_4, (const byte*)"\x0f\x29\x03" "d:4")
QDEF(MP_QSTR_d_colon_5, (const byte*)"\x0e\x29\x03" "d:5")
QDEF(MP_QSTR_d_colon_6, (const byte*)"\x0d\x29\x03" "d:6")
QDEF(MP_QSTR_d_colon_8, (const byte*)"\x03\x29\x03" "d:8")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_e3_colon_3, (const byte*)"\xba\xb9\x04" "e3:3")
QDEF(MP_QSTR_e4, (const byte*)"\xf4\x6d\x02" "e4")
QDEF(MP_QSTR_e4_colon_1, (const byte*)"\x3f\xb6\x04" "e4:1")
QDEF(MP_QSTR_e5, (const byte*)"\xf5\x6d\x02" "e5")
QDEF(MP_QSTR_e6_colon_3, (const byte*)"\x3f\xbe\x04" "e6:3")
QDEF(MP_QSTR_e_colon_1, (const byte*)"\x0b\x2d\x03" "e:1")
QDEF(MP_QSTR_e_colon_2, (const byte*)"\x08\x2d\x03" "e:2")
QDEF(MP_QSTR_e_colon_3, (const byte*)"\x09\x2d\x03" "e:3")
QDEF(MP_QSTR_e_colon_4, (const byte*)"\x0e\x2d\x03" "e:4")
QDEF(MP_QSTR_e_colon_5, (const byte*)"\x0f\x2d\x03" "e:5")
QDEF(MP_QSTR_e_colon_6, (const byte*)"\x0c\x2d\x03" "e:6")
QDEF(MP_QSTR_e_colon_8, (const byte*)"\x02\x2d\x03" "e:8")
QDEF(MP_QSTR_eb_colon_8, (const byte*)"\xe0\x5c\x04" "eb:8")
QDEF(MP_QSTR_f, (const byte*)"\xc3\xb5\x01" "f")
QDEF(MP_QSTR_f_hash_, (const byte*)"\x00\x6e\x02" "f#")
QDEF(MP_QSTR_f_hash_5, (const byte*)"\x35\x2e\x03" "f#5")
QDEF(MP_QSTR_f_hash_5_colon_2, (const byte*)"\xfd\x92\x05" "f#5:2")
QDEF(MP_QSTR_f_hash__colon_1, (const byte*)"\x4b\xf5\x04" "f#:1")
QDEF(MP_QSTR_f_hash__colon_2, (const byte*)"\x48\xf5\x04" "f#:2")
QDEF(MP_QSTR_f_hash__colon_8, (const byte*)"\x42\xf5\x04" "f#:8")
QDEF(MP_QSTR_f2, (const byte*)"\x11\x6e\x02" "f2")
QDEF(MP_QSTR_f_colon_1, (const byte*)"\x08\x31\x03" "f:1")
QDEF(MP_QSTR_f_colon_2, (const byte*)"\x0b\x31\x03" "f:2")
QDEF(MP_QSTR_f_colon_3, (const byte*)"\x0a\x31\x03" "f:3")
QDEF(MP_QSTR_f_colon_4, (const byte*)"\x0d\x31\x03" "f:4")
QDEF(MP_QSTR_f_colon_8, (const byte*)"\x01\x31\x03" "f:8")
QDEF(MP_QSTR_g, (const byte*)"\xc2\xb5\x01" "g")
QDEF(MP_QSTR_g_hash_, (const byte*)"\x21\x6e\x02" "g#")
QDEF(MP_QSTR_g_hash__colon_1, (const byte*)"\xea\x81\x04" "g#:1")
QDEF(MP_QSTR_g_hash__colon_3, (const byte*)"\xe8\x81\x04" "g#:3")
QDEF(MP_QSTR_g3_colon_1, (const byte*)"\xfa\xc1\x04" "g3:1")
QDEF(MP_QSTR_g4, (const byte*)"\x36\x6e\x02" "g4")
QDEF(MP_QSTR_g4_colon_1, (const byte*)"\x7d\xce\x04" "g4:1")
QDEF(MP_QSTR_g4_colon_2, (const byte*)"\x7e\xce\x04" "g4:2")
QDEF(MP_QSTR_g5, (const byte*)"\x37\x6e\x02" "g5")
QDEF(MP_QSTR_g5_colon_1, (const byte*)"\xfc\xda\x04" "g5:1")
QDEF(MP_QSTR_g_colon_1, (const byte*)"\x09\x35\x03" "g:1")
QDEF(MP_QSTR_g_colon_2, (const byte*)"\x0a\x35\x03" "g:2")
QDEF(MP_QSTR_g_colon_3, (const byte*)"\x0b\x35\x03" "g:3")
QDEF(MP_QSTR_g_colon_8, (const byte*)"\x00\x35\x03" "g:8")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_r4_colon_2, (const byte*)"\xcb\x9b\x04" "r4:2")
QDEF(MP_QSTR_r_colon_1, (const byte*)"\x1c\x82\x03" "r:1")
QDEF(MP_QSTR_r_colon_2, (const byte*)"\x1f\x82\x03" "r:2")
QDEF(MP_QSTR_r_colon_3, (const byte*)"\x1e\x82\x03" "r:3")
QDEF(MP_QSTR_A10, (const byte*)"\xc5\xbc\x03" "A10")
QDEF(MP_QSTR_A11, (const byte*)"\xc4\xbc\x03" "A11")
QDEF(MP_QSTR_A12, (const byte*)"\xc7\xbc\x03" "A12")
QDEF(MP_QSTR_A13, (const byte*)"\xc6\xbc\x03" "A13")
QDEF(MP_QSTR_A14, (const byte*)"\xc1\xbc\x03" "A14")
QDEF(MP_QSTR_A15, (const byte*)"\xc0\xbc\x03" "A15")
QDEF(MP_QSTR_A16, (const byte*)"\xc3\xbc\x03" "A16")
QDEF(MP_QSTR_A17, (const byte*)"\xc2\xbc\x03" "A17")
QDEF(MP_QSTR_A18, (const byte*)"\xcd\xbc\x03" "A18")
QDEF(MP_QSTR_A19, (const byte*)"\xcc\xbc\x03" "A19")
QDEF(MP_QSTR_A2, (const byte*)"\x56\x72\x02" "A2")
QDEF(MP_QSTR_A20, (const byte*)"\x26\xbd\x03" "A20")
QDEF(MP_QSTR_A21, (const byte*)"\x27\xbd\x03" "A21")
QDEF(MP_QSTR_A22, (const byte*)"\x24\xbd\x03" "A22")
QDEF(MP_QSTR_A23, (const byte*)"\x25\xbd\x03" "A23")
QDEF(MP_QSTR_A24, (const byte*)"\x22\xbd\x03" "A24")
QDEF(MP_QSTR_A25, (const byte*)"\x23\xbd\x03" "A25")
QDEF(MP_QSTR_A26, (const byte*)"\x20\xbd\x03" "A26")
QDEF(MP_QSTR_A27, (const byte*)"\x21\xbd\x03" "A27")
QDEF(MP_QSTR_A28, (const byte*)"\x2e\xbd\x03" "A28")
QDEF(MP_QSTR_A29, (const byte*)"\x2f\xbd\x03" "A29")
QDEF(MP_QSTR_A3, (const byte*)"\x57\x72\x02" "A3")
QDEF(MP_QSTR_A30, (const byte*)"\x07\xbd\x03" "A30")
QDEF(MP_QSTR_A31, (const byte*)"\x06\xbd\x03" "A31")
QDEF(MP_QSTR_A4, (const byte*)"\x50\x72\x02" "A4")
QDEF(MP_QSTR_A5, (const byte*)"\x51\x72\x02" "A5")
QDEF(MP_QSTR_A6, (const byte*)"\x52\x72\x02" "A6")
QDEF(MP_QSTR_A7, (const byte*)"\x53\x72\x02" "A7")
QDEF(MP_QSTR_A8, (const byte*)"\x5c\x72\x02" "A8")
QDEF(MP_QSTR_A9, (const byte*)"\x5d\x72\x02" "A9")
QDEF(MP_QSTR_PA10, (const byte*)"\x35\xfc\x04" "PA10")
QDEF(MP_QSTR_PA11, (const byte*)"\x34\xfc\x04" "PA11")
QDEF(MP_QSTR_PA12, (const byte*)"\x37\xfc\x04" "PA12")
QDEF(MP_QSTR_PA13, (const byte*)"\x36\xfc\x04" "PA13")
QDEF(MP_QSTR_PA14, (const byte*)"\x31\xfc\x04" "PA14")
QDEF(MP_QSTR_PA15, (const byte*)"\x30\xfc\x04" "PA15")
QDEF(MP_QSTR_PA16, (const byte*)"\x33\xfc\x04" "PA16")
QDEF(MP_QSTR_PA17, (const byte*)"\x32\xfc\x04" "PA17")
QDEF(MP_QSTR_PA18, (const byte*)"\x3d\xfc\x04" "PA18")
QDEF(MP_QSTR_PA19, (const byte*)"\x3c\xfc\x04" "PA19")
QDEF(MP_QSTR_PA2, (const byte*)"\x66\x0f\x03" "PA2")
QDEF(MP_QSTR_PA20, (const byte*)"\x16\xfc\x04" "PA20")
QDEF(MP_QSTR_PA21, (const byte*)"\x17\xfc\x04" "PA21")
QDEF(MP_QSTR_PA22, (const byte*)"\x14\xfc\x04" "PA22")
QDEF(MP_QSTR_PA23, (const byte*)"\x15\xfc\x04" "PA23")
QDEF(MP_QSTR_PA24, (const byte*)"\x12\xfc\x04" "PA24")
QDEF(MP_QSTR_PA25, (const byte*)"\x13\xfc\x04" "PA25")
QDEF(MP_QSTR_PA26, (const byte*)"\x10\xfc\x04" "PA26")
QDEF(MP_QSTR_PA27, (const byte*)"\x11\xfc\x04" "PA27")
QDEF(MP_QSTR_PA28, (const byte*)"\x1e\xfc\x04" "PA28")
QDEF(MP_QSTR_PA29, (const byte*)"\x1f\xfc\x04" "PA29")
QDEF(MP_QSTR_PA3, (const byte*)"\x67\x0f\x03" "PA3")
QDEF(MP_QSTR_PA30, (const byte*)"\x77\xfc\x04" "PA30")
QDEF(MP_QSTR_PA31, (const byte*)"\x76\xfc\x04" "PA31")
QDEF(MP_QSTR_PA4, (const byte*)"\x60\x0f\x03" "PA4")
QDEF(MP_QSTR_PA5, (const byte*)"\x61\x0f\x03" "PA5")
QDEF(MP_QSTR_PA6, (const byte*)"\x62\x0f\x03" "PA6")
QDEF(MP_QSTR_PA7, (const byte*)"\x63\x0f\x03" "PA7")
QDEF(MP_QSTR_PA8, (const byte*)"\x6c\x0f\x03" "PA8")
QDEF(MP_QSTR_PA9, (const byte*)"\x6d\x0f\x03" "PA9")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_DEBUG_IF_RESET, (const byte*)"\xae\x8e\x0e" "DEBUG_IF_RESET")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_FREQ_125KHZ, (const byte*)"\x35\x7b\x0b" "FREQ_125KHZ")
QDEF(MP_QSTR_FREQ_16MHZ, (const byte*)"\xc2\xf4\x0a" "FREQ_16MHZ")
QDEF(MP_QSTR_FREQ_1MHZ, (const byte*)"\x94\xb9\x09" "FREQ_1MHZ")
QDEF(MP_QSTR_FREQ_250KHZ, (const byte*)"\x34\xa6\x0b" "FREQ_250KHZ")
QDEF(MP_QSTR_FREQ_2MHZ, (const byte*)"\x77\x1d\x09" "FREQ_2MHZ")
QDEF(MP_QSTR_FREQ_4MHZ, (const byte*)"\xb1\x65\x09" "FREQ_4MHZ")
QDEF(MP_QSTR_FREQ_500KHZ, (const byte*)"\x16\x80\x0b" "FREQ_500KHZ")
QDEF(MP_QSTR_FREQ_8MHZ, (const byte*)"\x3d\x35\x09" "FREQ_8MHZ")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x51\x0a" "HARD_RESET")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\xc0\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\xed\x0a" "IRQ_RISING")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LED, (const byte*)"\x88\xdc\x03" "LED")
QDEF(MP_QSTR_LOCKUP_RESET, (const byte*)"\x61\xcf\x0c" "LOCKUP_RESET")
QDEF(MP_QSTR_LPCOMP_RESET, (const byte*)"\x62\xa8\x0c" "LPCOMP_RESET")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MODE_HIGH_LOW, (const byte*)"\x5c\x47\x0d" "MODE_HIGH_LOW")
QDEF(MP_QSTR_MODE_LOW_HIGH, (const byte*)"\x7c\x51\x0d" "MODE_LOW_HIGH")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NFC_RESET, (const byte*)"\x84\xcf\x09" "NFC_RESET")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_ONESHOT, (const byte*)"\x61\x0b\x07" "ONESHOT")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_PERIODIC, (const byte*)"\x0a\x35\x08" "PERIODIC")
QDEF(MP_QSTR_PULL_DISABLED, (const byte*)"\x8f\x4f\x0d" "PULL_DISABLED")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\xfb\x09" "PULL_DOWN")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x5e\x07" "PULL_UP")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x0d\x03" "PWM")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\xcb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x58\x05" "PinAF")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x43\x07" "PinBase")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\xc6\x0a" "SOFT_RESET")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\xe4\x06" "Signal")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_Temp, (const byte*)"\xc9\x55\x04" "Temp")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x72\x09" "WDT_RESET")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF(MP_QSTR_af, (const byte*)"\x22\x6e\x02" "af")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x80\x07" "af_list")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_alt, (const byte*)"\x5c\x33\x03" "alt")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x34\x03" "arg")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_battery_level, (const byte*)"\xa1\x5b\x0d" "battery_level")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_code, (const byte*)"\x68\xda\x04" "code")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x4d\x03" "cpu")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\xd2\x09" "deepsleep")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x5a\x07" "dupterm")
QDEF(MP_QSTR_duty, (const byte*)"\x19\x2c\x04" "duty")
QDEF(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\xd8\x04" "gpio")
QDEF(MP_QSTR_handler, (const byte*)"\xdd\x5d\x07" "handler")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x4c\x04" "high")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x00\x06" "invert")
QDEF(MP_QSTR_irq, (const byte*)"\x8f\x56\x03" "irq")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_low, (const byte*)"\x31\x3f\x03" "low")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x05\x06" "mapper")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF(MP_QSTR_names, (const byte*)"\x91\x29\x05" "names")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_os, (const byte*)"\x79\x6f\x02" "os")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x73\x03" "pin")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF(MP_QSTR_pulse_width, (const byte*)"\x23\x14\x0b" "pulse_width")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x71\x03" "pyb")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x09\x0c" "read_buf_len")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x92\x08" "readchar")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x8b\x03" "reg")
QDEF(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x37\x09" "repl_info")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x2f\x0b" "reset_cause")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x20\x06" "single")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x65\x0a" "soft_reset")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\xf7\x09" "stack_use")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_trigger, (const byte*)"\x9d\x8c\x07" "trigger")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x7f\x08" "umachine")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF(MP_QSTR_wake, (const byte*)"\xdd\x55\x04" "wake")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x84\x0e" "write_readinto")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\xe0\x09" "writechar")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x39\x07" "writeto")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\xed\x0b" "writeto_mem")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
